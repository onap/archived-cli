open_cli_schema_version: 1.0
name: microservice-create
description: Register microservice into Onap
version: onap-1.1
service:
  name: msb
  version: v1
  auth: none

parameters:
  - name: service-name
    description: Onap service name
    type: string
    short_option: x
    long_option: service-name
    is_optional: false
  - name: service-version
    description: Onap service version
    type: string
    short_option: y
    long_option: service-version
    is_optional: false
  - name: service-url
    description: Onap service base url
    type: url
    short_option: r
    long_option: service-url
    is_optional: false
  - name: enable-ssl
    description: Onap service is enabled with https or not
    type: string
    short_option: b
    long_option: enable-ssl
    is_optional: true
    default: false
  - name: path
    description: Onap service path
    type: string
    short_option: c
    long_option: path
    is_optional: true
  - name: node-ip
    description: Onap service running node IP
    type: string
  - name: node-port
    description: Onap service running node port
    type: string
  - name: create-or-update
    description: Onap service create or update
    type: bool
    default_value: true
results:
  direction: portrait
  attributes:
    - name: name
      description: Onap service name
      scope: short
      type: string
    - name: version
      description: Onap service version
      scope: short
      type: string
    - name: url
      description: Onap service base url
      scope: short
      type: url
    - name: status
      description: Onap service status
      scope: short
      type: digit
    - name: nodes
      description: Onap service running nodes
      scope: long
      type: string
    - name: enable-ssl
      description: Onap service is enabled with https or not
      scope: long
      type: string
    - name: path
      description: Onap service path
      scope: long
      type: string
http:
  request:
    uri: /services
    method: POST
    body: '{"serviceName":"${service-name}","version":"${service-version}","path":"${path}","url":"${service-url}","protocol":"REST", "enable_ssl":"${enable-ssl}", "visualRange":"1","lb_policy":"ip_hash","nodes":[{"ip":"${node-ip}","port":"${node-port}","ttl":0}]}'
    headers:
    queries:
      createOrUpdate: ${create-or-update}
  success_codes:
    - 201
    - 200
  result_map:
    name: $b{$.serviceName}
    version: $b{$.version}
    url: $b{$.url}
    status: $b{$.status}
    enable-ssl: $b{$.enable_ssl}
    path: $b{$.path}
    nodes: $b{$.nodes[*].ip}:$b{$.nodes[*].port}

  sample_response:
    body: '{"serviceName":"test","version":"v1","url":"/api/test/v1","protocol":"REST","visualRange":"1","lb_policy":"hash","nodes":[{"ip":"127.0.0.1","port":"8012","ttl":0,"nodeId":"test_127.0.0.1_8012","expiration":"2017-02-10T05:33:25Z","created_at":"2017-02-10T05:33:25Z","updated_at":"2017-02-10T05:33:25Z"}],"status":"1"}'
